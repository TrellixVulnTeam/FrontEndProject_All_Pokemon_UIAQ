{"ast":null,"code":"import _slicedToArray from \"/media/tkweifio/b000506f-688a-4d30-a220-fd7a81311d4c/var/www/html/all_pokemon.com/public_html/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/media/tkweifio/b000506f-688a-4d30-a220-fd7a81311d4c/var/www/html/all_pokemon.com/public_html/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/media/tkweifio/b000506f-688a-4d30-a220-fd7a81311d4c/var/www/html/all_pokemon.com/public_html/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _assertThisInitialized from \"/media/tkweifio/b000506f-688a-4d30-a220-fd7a81311d4c/var/www/html/all_pokemon.com/public_html/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/media/tkweifio/b000506f-688a-4d30-a220-fd7a81311d4c/var/www/html/all_pokemon.com/public_html/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/tkweifio/b000506f-688a-4d30-a220-fd7a81311d4c/var/www/html/all_pokemon.com/public_html/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/media/tkweifio/b000506f-688a-4d30-a220-fd7a81311d4c/var/www/html/all_pokemon.com/public_html/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/media/tkweifio/b000506f-688a-4d30-a220-fd7a81311d4c/var/www/html/all_pokemon.com/public_html/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { __rest } from 'tslib';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport React from 'react';\nimport { matchPath as matchPath$1, withRouter, Router } from 'react-router-dom';\nimport { ViewStacks, generateId, IonRoute, ViewLifeCycleManager, StackContext, RouteManagerContext, getConfig, LocationHistory, NavManager } from '@ionic/react';\nimport { Route, matchPath, Router as Router$1 } from 'react-router';\n\nvar IonRouteInner = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(IonRouteInner, _React$PureComponent);\n\n  var _super = _createSuper(IonRouteInner);\n\n  function IonRouteInner() {\n    _classCallCheck(this, IonRouteInner);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(IonRouteInner, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Route, {\n        path: this.props.path,\n        exact: this.props.exact,\n        render: this.props.render,\n        computedMatch: this.props.computedMatch\n      });\n    }\n  }]);\n\n  return IonRouteInner;\n}(React.PureComponent);\n\nvar ReactRouterViewStack = /*#__PURE__*/function (_ViewStacks) {\n  _inherits(ReactRouterViewStack, _ViewStacks);\n\n  var _super2 = _createSuper(ReactRouterViewStack);\n\n  function ReactRouterViewStack() {\n    var _this;\n\n    _classCallCheck(this, ReactRouterViewStack);\n\n    _this = _super2.call(this);\n    _this.createViewItem = _this.createViewItem.bind(_assertThisInitialized(_this));\n    _this.findViewItemByRouteInfo = _this.findViewItemByRouteInfo.bind(_assertThisInitialized(_this));\n    _this.findLeavingViewItemByRouteInfo = _this.findLeavingViewItemByRouteInfo.bind(_assertThisInitialized(_this));\n    _this.getChildrenToRender = _this.getChildrenToRender.bind(_assertThisInitialized(_this));\n    _this.findViewItemByPathname = _this.findViewItemByPathname.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ReactRouterViewStack, [{\n    key: \"createViewItem\",\n    value: function createViewItem(outletId, reactElement, routeInfo, page) {\n      var viewItem = {\n        id: generateId('viewItem'),\n        outletId: outletId,\n        ionPageElement: page,\n        reactElement: reactElement,\n        mount: true,\n        ionRoute: false\n      };\n      var matchProps = {\n        exact: reactElement.props.exact,\n        path: reactElement.props.path || reactElement.props.from,\n        component: reactElement.props.component\n      };\n      var match = matchPath(routeInfo.pathname, matchProps);\n\n      if (reactElement.type === IonRoute) {\n        viewItem.ionRoute = true;\n        viewItem.disableIonPageManagement = reactElement.props.disableIonPageManagement;\n      }\n\n      viewItem.routeData = {\n        match: match,\n        childProps: reactElement.props\n      };\n      return viewItem;\n    }\n  }, {\n    key: \"getChildrenToRender\",\n    value: function getChildrenToRender(outletId, ionRouterOutlet, routeInfo) {\n      var _this2 = this;\n\n      var viewItems = this.getViewItemsForOutlet(outletId); // Sync latest routes with viewItems\n\n      React.Children.forEach(ionRouterOutlet.props.children, function (child) {\n        var viewItem = viewItems.find(function (v) {\n          return matchComponent$1(child, v.routeData.childProps.path || v.routeData.childProps.from);\n        });\n\n        if (viewItem) {\n          viewItem.reactElement = child;\n        }\n      });\n      var children = viewItems.map(function (viewItem) {\n        var clonedChild;\n\n        if (viewItem.ionRoute && !viewItem.disableIonPageManagement) {\n          clonedChild = React.createElement(ViewLifeCycleManager, {\n            key: \"view-\".concat(viewItem.id),\n            mount: viewItem.mount,\n            removeView: function removeView() {\n              return _this2.remove(viewItem);\n            }\n          }, React.cloneElement(viewItem.reactElement, {\n            computedMatch: viewItem.routeData.match\n          }));\n        } else {\n          var match = matchComponent$1(viewItem.reactElement, routeInfo.pathname);\n          clonedChild = React.createElement(ViewLifeCycleManager, {\n            key: \"view-\".concat(viewItem.id),\n            mount: viewItem.mount,\n            removeView: function removeView() {\n              return _this2.remove(viewItem);\n            }\n          }, React.cloneElement(viewItem.reactElement, {\n            computedMatch: viewItem.routeData.match\n          }));\n\n          if (!match && viewItem.routeData.match) {\n            viewItem.routeData.match = undefined;\n            viewItem.mount = false;\n          }\n        }\n\n        return clonedChild;\n      });\n      return children;\n    }\n  }, {\n    key: \"findViewItemByRouteInfo\",\n    value: function findViewItemByRouteInfo(routeInfo, outletId) {\n      var _this$findViewItemByP = this.findViewItemByPath(routeInfo.pathname, outletId),\n          viewItem = _this$findViewItemByP.viewItem,\n          match = _this$findViewItemByP.match;\n\n      if (viewItem && match) {\n        viewItem.routeData.match = match;\n      }\n\n      return viewItem;\n    }\n  }, {\n    key: \"findLeavingViewItemByRouteInfo\",\n    value: function findLeavingViewItemByRouteInfo(routeInfo, outletId) {\n      var mustBeIonRoute = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      var _this$findViewItemByP2 = this.findViewItemByPath(routeInfo.lastPathname, outletId, false, mustBeIonRoute),\n          viewItem = _this$findViewItemByP2.viewItem;\n\n      return viewItem;\n    }\n  }, {\n    key: \"findViewItemByPathname\",\n    value: function findViewItemByPathname(pathname, outletId) {\n      var _this$findViewItemByP3 = this.findViewItemByPath(pathname, outletId),\n          viewItem = _this$findViewItemByP3.viewItem;\n\n      return viewItem;\n    }\n  }, {\n    key: \"findViewItemByPath\",\n    value: function findViewItemByPath(pathname, outletId, forceExact, mustBeIonRoute) {\n      var viewItem;\n      var match;\n      var viewStack;\n\n      if (outletId) {\n        viewStack = this.getViewItemsForOutlet(outletId);\n        viewStack.some(matchView);\n\n        if (!viewItem) {\n          viewStack.some(matchDefaultRoute);\n        }\n      } else {\n        var viewItems = this.getAllViewItems();\n        viewItems.some(matchView);\n\n        if (!viewItem) {\n          viewItems.some(matchDefaultRoute);\n        }\n      }\n\n      return {\n        viewItem: viewItem,\n        match: match\n      };\n\n      function matchView(v) {\n        if (mustBeIonRoute && !v.ionRoute) {\n          return false;\n        }\n\n        var matchProps = {\n          exact: forceExact ? true : v.routeData.childProps.exact,\n          path: v.routeData.childProps.path || v.routeData.childProps.from,\n          component: v.routeData.childProps.component\n        };\n        var myMatch = matchPath(pathname, matchProps);\n\n        if (myMatch) {\n          viewItem = v;\n          match = myMatch;\n          return true;\n        }\n\n        return false;\n      }\n\n      function matchDefaultRoute(v) {\n        // try to find a route that doesn't have a path or from prop, that will be our default route\n        if (!v.routeData.childProps.path && !v.routeData.childProps.from) {\n          match = {\n            path: pathname,\n            url: pathname,\n            isExact: true,\n            params: {}\n          };\n          viewItem = v;\n          return true;\n        }\n\n        return false;\n      }\n    }\n  }]);\n\n  return ReactRouterViewStack;\n}(ViewStacks);\n\nfunction matchComponent$1(node, pathname, forceExact) {\n  var matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component\n  };\n  var match = matchPath(pathname, matchProps);\n  return match;\n}\n\nfunction clonePageElement(leavingViewHtml) {\n  var html;\n\n  if (typeof leavingViewHtml === 'string') {\n    html = leavingViewHtml;\n  } else {\n    html = leavingViewHtml.outerHTML;\n  }\n\n  if (document) {\n    var newEl = document.createElement('div');\n    newEl.innerHTML = html;\n    newEl.style.zIndex = ''; // Remove an existing back button so the new element doesn't get two of them\n\n    var ionBackButton = newEl.getElementsByTagName('ion-back-button');\n\n    if (ionBackButton[0]) {\n      ionBackButton[0].remove();\n    }\n\n    return newEl.firstChild;\n  }\n\n  return undefined;\n}\n\nvar StackManager = /*#__PURE__*/function (_React$PureComponent2) {\n  _inherits(StackManager, _React$PureComponent2);\n\n  var _super3 = _createSuper(StackManager);\n\n  function StackManager(props) {\n    var _this3;\n\n    _classCallCheck(this, StackManager);\n\n    _this3 = _super3.call(this, props);\n    _this3.stackContextValue = {\n      registerIonPage: _this3.registerIonPage.bind(_assertThisInitialized(_this3)),\n      isInOutlet: function isInOutlet() {\n        return true;\n      }\n    };\n    _this3.registerIonPage = _this3.registerIonPage.bind(_assertThisInitialized(_this3));\n    _this3.transitionPage = _this3.transitionPage.bind(_assertThisInitialized(_this3));\n    _this3.handlePageTransition = _this3.handlePageTransition.bind(_assertThisInitialized(_this3));\n    _this3.id = generateId('routerOutlet');\n    return _this3;\n  }\n\n  _createClass(StackManager, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.routerOutletElement) {\n        this.setupRouterOutlet(this.routerOutletElement); // console.log(`SM Mount - ${this.routerOutletElement.id} (${this.id})`);\n\n        this.handlePageTransition(this.props.routeInfo);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.routeInfo.pathname !== prevProps.routeInfo.pathname) {\n        this.handlePageTransition(this.props.routeInfo);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // console.log(`SM UNMount - ${(this.routerOutletElement?.id as any).id} (${this.id})`);\n      this.context.clearOutlet(this.id);\n    }\n  }, {\n    key: \"handlePageTransition\",\n    value: function () {\n      var _handlePageTransition = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(routeInfo) {\n        var _this4 = this;\n\n        var _a, _b, enteringViewItem, leavingViewItem, enteringRoute;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // If routerOutlet isn't quite ready, give it another try in a moment\n                if (!this.routerOutletElement || !this.routerOutletElement.commit) {\n                  setTimeout(function () {\n                    return _this4.handlePageTransition(routeInfo);\n                  }, 10);\n                } else {\n                  enteringViewItem = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n                  leavingViewItem = this.context.findLeavingViewItemByRouteInfo(routeInfo, this.id);\n\n                  if (!leavingViewItem && routeInfo.prevRouteLastPathname) {\n                    leavingViewItem = this.context.findViewItemByPathname(routeInfo.prevRouteLastPathname, this.id);\n                  } // Check if leavingViewItem should be unmounted\n\n\n                  if (leavingViewItem) {\n                    if (routeInfo.routeAction === 'replace') {\n                      leavingViewItem.mount = false;\n                    } else if (!(routeInfo.routeAction === 'push' && routeInfo.routeDirection === 'forward')) {\n                      if (routeInfo.routeDirection !== 'none' && enteringViewItem !== leavingViewItem) {\n                        leavingViewItem.mount = false;\n                      }\n                    } else if ((_a = routeInfo.routeOptions) === null || _a === void 0 ? void 0 : _a.unmount) {\n                      leavingViewItem.mount = false;\n                    }\n                  }\n\n                  enteringRoute = matchRoute((_b = this.ionRouterOutlet) === null || _b === void 0 ? void 0 : _b.props.children, routeInfo);\n\n                  if (enteringViewItem) {\n                    enteringViewItem.reactElement = enteringRoute;\n                  }\n\n                  if (!enteringViewItem) {\n                    if (enteringRoute) {\n                      enteringViewItem = this.context.createViewItem(this.id, enteringRoute, routeInfo);\n                      this.context.addViewItem(enteringViewItem);\n                    }\n                  }\n\n                  if (enteringViewItem && enteringViewItem.ionPageElement) {\n                    this.transitionPage(routeInfo, enteringViewItem, leavingViewItem);\n                  } else if (leavingViewItem && !enteringRoute && !enteringViewItem) {\n                    // If we have a leavingView but no entering view/route, we are probably leaving to\n                    // another outlet, so hide this leavingView. We do it in a timeout to give time for a\n                    // transition to finish.\n                    // setTimeout(() => {\n                    if (leavingViewItem.ionPageElement) {\n                      leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n                      leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n                    } // }, 250);\n\n                  }\n\n                  this.forceUpdate();\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handlePageTransition(_x) {\n        return _handlePageTransition.apply(this, arguments);\n      }\n\n      return handlePageTransition;\n    }()\n  }, {\n    key: \"registerIonPage\",\n    value: function registerIonPage(page, routeInfo) {\n      var foundView = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n\n      if (foundView) {\n        foundView.ionPageElement = page;\n        foundView.ionRoute = true;\n      }\n\n      this.handlePageTransition(routeInfo);\n    }\n  }, {\n    key: \"setupRouterOutlet\",\n    value: function () {\n      var _setupRouterOutlet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(routerOutlet) {\n        var _this5 = this;\n\n        var canStart, onStart;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                canStart = function canStart() {\n                  var config = getConfig();\n                  var swipeEnabled = config && config.get('swipeBackEnabled', routerOutlet.mode === 'ios');\n\n                  if (swipeEnabled) {\n                    return _this5.context.canGoBack();\n                  } else {\n                    return false;\n                  }\n                };\n\n                onStart = function onStart() {\n                  _this5.context.goBack();\n                };\n\n                routerOutlet.swipeHandler = {\n                  canStart: canStart,\n                  onStart: onStart,\n                  onEnd: function onEnd(_shouldContinue) {\n                    return true;\n                  }\n                };\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function setupRouterOutlet(_x2) {\n        return _setupRouterOutlet.apply(this, arguments);\n      }\n\n      return setupRouterOutlet;\n    }()\n  }, {\n    key: \"transitionPage\",\n    value: function () {\n      var _transitionPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(routeInfo, enteringViewItem, leavingViewItem) {\n        var routerOutlet, direction, match, newLeavingElement, runCommit, _runCommit;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _runCommit = function _runCommit3() {\n                  _runCommit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(enteringEl, leavingEl) {\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            enteringEl.classList.add('ion-page');\n                            enteringEl.classList.add('ion-page-invisible');\n                            _context3.next = 4;\n                            return routerOutlet.commit(enteringEl, leavingEl, {\n                              deepWait: true,\n                              duration: direction === undefined ? 0 : undefined,\n                              direction: direction,\n                              showGoBack: !!routeInfo.pushedByRoute,\n                              progressAnimation: false,\n                              animationBuilder: routeInfo.routeAnimation\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n                  return _runCommit.apply(this, arguments);\n                };\n\n                runCommit = function _runCommit2(_x6, _x7) {\n                  return _runCommit.apply(this, arguments);\n                };\n\n                routerOutlet = this.routerOutletElement;\n                direction = routeInfo.routeDirection === 'none' || routeInfo.routeDirection === 'root' ? undefined : routeInfo.routeDirection;\n\n                if (!(enteringViewItem && enteringViewItem.ionPageElement && this.routerOutletElement)) {\n                  _context4.next = 23;\n                  break;\n                }\n\n                if (!(leavingViewItem && leavingViewItem.ionPageElement && enteringViewItem === leavingViewItem)) {\n                  _context4.next = 20;\n                  break;\n                }\n\n                // If a page is transitioning to another version of itself\n                // we clone it so we can have an animation to show\n                match = matchComponent(leavingViewItem.reactElement, routeInfo.pathname, true);\n\n                if (!match) {\n                  _context4.next = 16;\n                  break;\n                }\n\n                newLeavingElement = clonePageElement(leavingViewItem.ionPageElement.outerHTML);\n\n                if (!newLeavingElement) {\n                  _context4.next = 14;\n                  break;\n                }\n\n                this.routerOutletElement.appendChild(newLeavingElement);\n                _context4.next = 13;\n                return runCommit(enteringViewItem.ionPageElement, newLeavingElement);\n\n              case 13:\n                this.routerOutletElement.removeChild(newLeavingElement);\n\n              case 14:\n                _context4.next = 18;\n                break;\n\n              case 16:\n                _context4.next = 18;\n                return runCommit(enteringViewItem.ionPageElement, undefined);\n\n              case 18:\n                _context4.next = 23;\n                break;\n\n              case 20:\n                _context4.next = 22;\n                return runCommit(enteringViewItem.ionPageElement, leavingViewItem === null || leavingViewItem === void 0 ? void 0 : leavingViewItem.ionPageElement);\n\n              case 22:\n                if (leavingViewItem && leavingViewItem.ionPageElement) {\n                  leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n                  leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n                }\n\n              case 23:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function transitionPage(_x3, _x4, _x5) {\n        return _transitionPage.apply(this, arguments);\n      }\n\n      return transitionPage;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var children = this.props.children;\n      var ionRouterOutlet = React.Children.only(children);\n      this.ionRouterOutlet = ionRouterOutlet;\n      var components = this.context.getChildrenToRender(this.id, this.ionRouterOutlet, this.props.routeInfo, function () {\n        _this6.forceUpdate();\n      });\n      return React.createElement(StackContext.Provider, {\n        value: this.stackContextValue\n      }, React.cloneElement(ionRouterOutlet, {\n        ref: function ref(node) {\n          if (ionRouterOutlet.props.setRef) {\n            ionRouterOutlet.props.setRef(node);\n          }\n\n          if (ionRouterOutlet.props.forwardedRef) {\n            ionRouterOutlet.props.forwardedRef.current = node;\n          }\n\n          _this6.routerOutletElement = node;\n          var ref = ionRouterOutlet.ref;\n\n          if (typeof ref === 'function') {\n            ref(node);\n          }\n        }\n      }, components));\n    }\n  }], [{\n    key: \"contextType\",\n    get: function get() {\n      return RouteManagerContext;\n    }\n  }]);\n\n  return StackManager;\n}(React.PureComponent);\n\nfunction matchRoute(node, routeInfo) {\n  var matchedNode;\n  React.Children.forEach(node, function (child) {\n    var matchProps = {\n      exact: child.props.exact,\n      path: child.props.path || child.props.from,\n      component: child.props.component\n    };\n    var match = matchPath$1(routeInfo.pathname, matchProps);\n\n    if (match) {\n      matchedNode = child;\n    }\n  });\n\n  if (matchedNode) {\n    return matchedNode;\n  } // If we haven't found a node\n  // try to find one that doesn't have a path or from prop, that will be our not found route\n\n\n  React.Children.forEach(node, function (child) {\n    if (!(child.props.path || child.props.from)) {\n      matchedNode = child;\n    }\n  });\n  return matchedNode;\n}\n\nfunction matchComponent(node, pathname, forceExact) {\n  var matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component\n  };\n  var match = matchPath$1(pathname, matchProps);\n  return match;\n}\n\nvar IonRouterInner = /*#__PURE__*/function (_React$PureComponent3) {\n  _inherits(IonRouterInner, _React$PureComponent3);\n\n  var _super4 = _createSuper(IonRouterInner);\n\n  function IonRouterInner(props) {\n    var _this7;\n\n    _classCallCheck(this, IonRouterInner);\n\n    _this7 = _super4.call(this, props);\n    _this7.exitViewFromOtherOutletHandlers = [];\n    _this7.locationHistory = new LocationHistory();\n    _this7.viewStack = new ReactRouterViewStack();\n    _this7.routeMangerContextState = {\n      canGoBack: function canGoBack() {\n        return _this7.locationHistory.canGoBack();\n      },\n      clearOutlet: _this7.viewStack.clear,\n      findViewItemByPathname: _this7.viewStack.findViewItemByPathname,\n      getChildrenToRender: _this7.viewStack.getChildrenToRender,\n      goBack: function goBack() {\n        return _this7.handleNavigateBack();\n      },\n      createViewItem: _this7.viewStack.createViewItem,\n      findViewItemByRouteInfo: _this7.viewStack.findViewItemByRouteInfo,\n      findLeavingViewItemByRouteInfo: _this7.viewStack.findLeavingViewItemByRouteInfo,\n      addViewItem: _this7.viewStack.add,\n      unMountViewItem: _this7.viewStack.remove\n    };\n    var routeInfo = {\n      id: generateId('routeInfo'),\n      pathname: _this7.props.location.pathname,\n      search: _this7.props.location.search\n    };\n\n    _this7.locationHistory.add(routeInfo);\n\n    _this7.handleChangeTab = _this7.handleChangeTab.bind(_assertThisInitialized(_this7));\n    _this7.handleResetTab = _this7.handleResetTab.bind(_assertThisInitialized(_this7));\n    _this7.handleNativeBack = _this7.handleNativeBack.bind(_assertThisInitialized(_this7));\n    _this7.handleNavigate = _this7.handleNavigate.bind(_assertThisInitialized(_this7));\n    _this7.handleNavigateBack = _this7.handleNavigateBack.bind(_assertThisInitialized(_this7));\n\n    _this7.props.registerHistoryListener(_this7.handleHistoryChange.bind(_assertThisInitialized(_this7)));\n\n    _this7.handleSetCurrentTab = _this7.handleSetCurrentTab.bind(_assertThisInitialized(_this7));\n    _this7.state = {\n      routeInfo: routeInfo\n    };\n    return _this7;\n  }\n\n  _createClass(IonRouterInner, [{\n    key: \"handleChangeTab\",\n    value: function handleChangeTab(tab, path, routeOptions) {\n      if (!path) {\n        return;\n      }\n\n      var routeInfo = this.locationHistory.getCurrentRouteInfoForTab(tab);\n\n      var _path$split = path.split('?'),\n          _path$split2 = _slicedToArray(_path$split, 2),\n          pathname = _path$split2[0],\n          search = _path$split2[1];\n\n      if (routeInfo) {\n        this.incomingRouteParams = Object.assign(Object.assign({}, routeInfo), {\n          routeAction: 'push',\n          routeDirection: 'none'\n        });\n\n        if (routeInfo.pathname === pathname) {\n          this.incomingRouteParams.routeOptions = routeOptions;\n          this.props.history.push(routeInfo.pathname + (routeInfo.search || ''));\n        } else {\n          this.incomingRouteParams.pathname = pathname;\n          this.incomingRouteParams.search = search ? '?' + search : undefined;\n          this.incomingRouteParams.routeOptions = routeOptions;\n          this.props.history.push(pathname + (search ? '?' + search : ''));\n        }\n      } else {\n        this.handleNavigate(pathname, 'push', 'none', undefined, routeOptions, tab);\n      }\n    }\n  }, {\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var _a, _b, _c;\n\n      var leavingLocationInfo;\n\n      if (this.incomingRouteParams) {\n        if (this.incomingRouteParams.routeAction === 'replace') {\n          leavingLocationInfo = this.locationHistory.previous();\n        } else {\n          leavingLocationInfo = this.locationHistory.current();\n        }\n      } else {\n        leavingLocationInfo = this.locationHistory.current();\n      }\n\n      var leavingUrl = leavingLocationInfo.pathname + leavingLocationInfo.search;\n\n      if (leavingUrl !== location.pathname) {\n        if (!this.incomingRouteParams) {\n          if (action === 'REPLACE') {\n            this.incomingRouteParams = {\n              routeAction: 'replace',\n              routeDirection: 'none',\n              tab: this.currentTab\n            };\n          }\n\n          if (action === 'POP') {\n            var currentRoute = this.locationHistory.current();\n\n            if (currentRoute && currentRoute.pushedByRoute) {\n              var prevInfo = this.locationHistory.findLastLocation(currentRoute);\n              this.incomingRouteParams = Object.assign(Object.assign({}, prevInfo), {\n                routeAction: 'pop',\n                routeDirection: 'back'\n              });\n            } else {\n              this.incomingRouteParams = {\n                routeAction: 'pop',\n                routeDirection: 'none',\n                tab: this.currentTab\n              };\n            }\n          }\n\n          if (!this.incomingRouteParams) {\n            this.incomingRouteParams = {\n              routeAction: 'push',\n              routeDirection: ((_a = location.state) === null || _a === void 0 ? void 0 : _a.direction) || 'forward',\n              routeOptions: (_b = location.state) === null || _b === void 0 ? void 0 : _b.routerOptions,\n              tab: this.currentTab\n            };\n          }\n        }\n\n        var routeInfo;\n\n        if ((_c = this.incomingRouteParams) === null || _c === void 0 ? void 0 : _c.id) {\n          routeInfo = Object.assign(Object.assign({}, this.incomingRouteParams), {\n            lastPathname: leavingLocationInfo.pathname\n          });\n          this.locationHistory.add(routeInfo);\n        } else {\n          var isPushed = this.incomingRouteParams.routeAction === 'push' && this.incomingRouteParams.routeDirection === 'forward';\n          routeInfo = Object.assign(Object.assign({\n            id: generateId('routeInfo')\n          }, this.incomingRouteParams), {\n            lastPathname: leavingLocationInfo.pathname,\n            pathname: location.pathname,\n            search: location.search,\n            params: this.props.match.params,\n            prevRouteLastPathname: leavingLocationInfo.lastPathname\n          });\n\n          if (isPushed) {\n            routeInfo.tab = leavingLocationInfo.tab;\n            routeInfo.pushedByRoute = leavingLocationInfo.pathname;\n          } else if (routeInfo.routeAction === 'pop') {\n            var r = this.locationHistory.findLastLocation(routeInfo);\n            routeInfo.pushedByRoute = r === null || r === void 0 ? void 0 : r.pushedByRoute;\n          } else if (routeInfo.routeAction === 'push' && routeInfo.tab !== leavingLocationInfo.tab) {\n            // If we are switching tabs grab the last route info for the tab and use its pushedByRoute\n            var lastRoute = this.locationHistory.getCurrentRouteInfoForTab(routeInfo.tab);\n            routeInfo.pushedByRoute = lastRoute === null || lastRoute === void 0 ? void 0 : lastRoute.pushedByRoute;\n          } else if (routeInfo.routeAction === 'replace') {\n            // Make sure to set the lastPathname, etc.. to the current route so the page transitions out\n            var currentRouteInfo = this.locationHistory.current();\n            /**\n             * If going from /home to /child, then replacing from\n             * /child to /home, we don't want the route info to\n             * say that /home was pushed by /home which is not correct.\n             */\n\n            var currentPushedBy = currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.pushedByRoute;\n            var pushedByRoute = currentPushedBy !== undefined && currentPushedBy !== routeInfo.pathname ? currentPushedBy : routeInfo.pushedByRoute;\n            routeInfo.lastPathname = (currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.pathname) || routeInfo.lastPathname;\n            routeInfo.prevRouteLastPathname = currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.lastPathname;\n            routeInfo.pushedByRoute = pushedByRoute;\n            routeInfo.routeDirection = (currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.routeDirection) || routeInfo.routeDirection;\n            routeInfo.routeAnimation = (currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.routeAnimation) || routeInfo.routeAnimation;\n          }\n\n          this.locationHistory.add(routeInfo);\n        }\n\n        this.setState({\n          routeInfo: routeInfo\n        });\n      }\n\n      this.incomingRouteParams = undefined;\n    }\n    /**\n     * history@4.x uses goBack(), history@5.x uses back()\n     * TODO: If support for React Router <=5 is dropped\n     * this logic is no longer needed. We can just\n     * assume back() is available.\n     */\n\n  }, {\n    key: \"handleNativeBack\",\n    value: function handleNativeBack() {\n      var history = this.props.history;\n      var goBack = history.goBack || history.back;\n      goBack();\n    }\n  }, {\n    key: \"handleNavigate\",\n    value: function handleNavigate(path, routeAction, routeDirection, routeAnimation, routeOptions, tab) {\n      this.incomingRouteParams = Object.assign(this.incomingRouteParams || {}, {\n        routeAction: routeAction,\n        routeDirection: routeDirection,\n        routeOptions: routeOptions,\n        routeAnimation: routeAnimation,\n        tab: tab\n      });\n\n      if (routeAction === 'push') {\n        this.props.history.push(path);\n      } else {\n        this.props.history.replace(path);\n      }\n    }\n  }, {\n    key: \"handleNavigateBack\",\n    value: function handleNavigateBack() {\n      var defaultHref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';\n      var routeAnimation = arguments.length > 1 ? arguments[1] : undefined;\n      var config = getConfig();\n      defaultHref = defaultHref ? defaultHref : config && config.get('backButtonDefaultHref');\n      var routeInfo = this.locationHistory.current();\n\n      if (routeInfo && routeInfo.pushedByRoute) {\n        var prevInfo = this.locationHistory.findLastLocation(routeInfo);\n\n        if (prevInfo) {\n          this.incomingRouteParams = Object.assign(Object.assign({}, prevInfo), {\n            routeAction: 'pop',\n            routeDirection: 'back',\n            routeAnimation: routeAnimation || routeInfo.routeAnimation\n          });\n\n          if (routeInfo.lastPathname === routeInfo.pushedByRoute ||\n          /**\n           * We need to exclude tab switches/tab\n           * context changes here because tabbed\n           * navigation is not linear, but router.back()\n           * will go back in a linear fashion.\n           */\n          prevInfo.pathname === routeInfo.pushedByRoute && routeInfo.tab === '' && prevInfo.tab === '') {\n            /**\n             * history@4.x uses goBack(), history@5.x uses back()\n             * TODO: If support for React Router <=5 is dropped\n             * this logic is no longer needed. We can just\n             * assume back() is available.\n             */\n            var history = this.props.history;\n            var goBack = history.goBack || history.back;\n            goBack();\n          } else {\n            this.handleNavigate(prevInfo.pathname + (prevInfo.search || ''), 'pop', 'back');\n          }\n        } else {\n          this.handleNavigate(defaultHref, 'pop', 'back');\n        }\n      } else {\n        this.handleNavigate(defaultHref, 'pop', 'back');\n      }\n    }\n  }, {\n    key: \"handleResetTab\",\n    value: function handleResetTab(tab, originalHref, originalRouteOptions) {\n      var routeInfo = this.locationHistory.getFirstRouteInfoForTab(tab);\n\n      if (routeInfo) {\n        var newRouteInfo = Object.assign({}, routeInfo);\n        newRouteInfo.pathname = originalHref;\n        newRouteInfo.routeOptions = originalRouteOptions;\n        this.incomingRouteParams = Object.assign(Object.assign({}, newRouteInfo), {\n          routeAction: 'pop',\n          routeDirection: 'back'\n        });\n        this.props.history.push(newRouteInfo.pathname + (newRouteInfo.search || ''));\n      }\n    }\n  }, {\n    key: \"handleSetCurrentTab\",\n    value: function handleSetCurrentTab(tab) {\n      this.currentTab = tab;\n      var ri = Object.assign({}, this.locationHistory.current());\n\n      if (ri.tab !== tab) {\n        ri.tab = tab;\n        this.locationHistory.update(ri);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RouteManagerContext.Provider, {\n        value: this.routeMangerContextState\n      }, React.createElement(NavManager, {\n        ionRoute: IonRouteInner,\n        ionRedirect: {},\n        stackManager: StackManager,\n        routeInfo: this.state.routeInfo,\n        onNativeBack: this.handleNativeBack,\n        onNavigateBack: this.handleNavigateBack,\n        onNavigate: this.handleNavigate,\n        onSetCurrentTab: this.handleSetCurrentTab,\n        onChangeTab: this.handleChangeTab,\n        onResetTab: this.handleResetTab,\n        locationHistory: this.locationHistory\n      }, this.props.children));\n    }\n  }]);\n\n  return IonRouterInner;\n}(React.PureComponent);\n\nvar IonRouter = withRouter(IonRouterInner);\nIonRouter.displayName = 'IonRouter';\n\nvar IonReactRouter = /*#__PURE__*/function (_React$Component) {\n  _inherits(IonReactRouter, _React$Component);\n\n  var _super5 = _createSuper(IonReactRouter);\n\n  function IonReactRouter(props) {\n    var _this8;\n\n    _classCallCheck(this, IonReactRouter);\n\n    _this8 = _super5.call(this, props);\n\n    var history = props.history,\n        rest = __rest(props, [\"history\"]);\n\n    _this8.history = history || createBrowserHistory(rest);\n\n    _this8.history.listen(_this8.handleHistoryChange.bind(_assertThisInitialized(_this8)));\n\n    _this8.registerHistoryListener = _this8.registerHistoryListener.bind(_assertThisInitialized(_this8));\n    return _this8;\n  }\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n\n\n  _createClass(IonReactRouter, [{\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var locationValue = location.location || location;\n      var actionValue = location.action || action;\n\n      if (this.historyListenHandler) {\n        this.historyListenHandler(locationValue, actionValue);\n      }\n    }\n  }, {\n    key: \"registerHistoryListener\",\n    value: function registerHistoryListener(cb) {\n      this.historyListenHandler = cb;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          children = _a.children,\n          props = __rest(_a, [\"children\"]);\n\n      return React.createElement(Router, Object.assign({\n        history: this.history\n      }, props), React.createElement(IonRouter, {\n        registerHistoryListener: this.registerHistoryListener\n      }, children));\n    }\n  }]);\n\n  return IonReactRouter;\n}(React.Component);\n\nvar IonReactMemoryRouter = /*#__PURE__*/function (_React$Component2) {\n  _inherits(IonReactMemoryRouter, _React$Component2);\n\n  var _super6 = _createSuper(IonReactMemoryRouter);\n\n  function IonReactMemoryRouter(props) {\n    var _this9;\n\n    _classCallCheck(this, IonReactMemoryRouter);\n\n    _this9 = _super6.call(this, props);\n    _this9.history = props.history;\n\n    _this9.history.listen(_this9.handleHistoryChange.bind(_assertThisInitialized(_this9)));\n\n    _this9.registerHistoryListener = _this9.registerHistoryListener.bind(_assertThisInitialized(_this9));\n    return _this9;\n  }\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n\n\n  _createClass(IonReactMemoryRouter, [{\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var locationValue = location.location || location;\n      var actionValue = location.action || action;\n\n      if (this.historyListenHandler) {\n        this.historyListenHandler(locationValue, actionValue);\n      }\n    }\n  }, {\n    key: \"registerHistoryListener\",\n    value: function registerHistoryListener(cb) {\n      this.historyListenHandler = cb;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          children = _a.children,\n          props = __rest(_a, [\"children\"]);\n\n      return React.createElement(Router$1, Object.assign({}, props), React.createElement(IonRouter, {\n        registerHistoryListener: this.registerHistoryListener\n      }, children));\n    }\n  }]);\n\n  return IonReactMemoryRouter;\n}(React.Component);\n\nvar IonReactHashRouter = /*#__PURE__*/function (_React$Component3) {\n  _inherits(IonReactHashRouter, _React$Component3);\n\n  var _super7 = _createSuper(IonReactHashRouter);\n\n  function IonReactHashRouter(props) {\n    var _this10;\n\n    _classCallCheck(this, IonReactHashRouter);\n\n    _this10 = _super7.call(this, props);\n\n    var history = props.history,\n        rest = __rest(props, [\"history\"]);\n\n    _this10.history = history || createHashHistory(rest);\n\n    _this10.history.listen(_this10.handleHistoryChange.bind(_assertThisInitialized(_this10)));\n\n    _this10.registerHistoryListener = _this10.registerHistoryListener.bind(_assertThisInitialized(_this10));\n    return _this10;\n  }\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n\n\n  _createClass(IonReactHashRouter, [{\n    key: \"handleHistoryChange\",\n    value: function handleHistoryChange(location, action) {\n      var locationValue = location.location || location;\n      var actionValue = location.action || action;\n\n      if (this.historyListenHandler) {\n        this.historyListenHandler(locationValue, actionValue);\n      }\n    }\n  }, {\n    key: \"registerHistoryListener\",\n    value: function registerHistoryListener(cb) {\n      this.historyListenHandler = cb;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          children = _a.children,\n          props = __rest(_a, [\"children\"]);\n\n      return React.createElement(Router, Object.assign({\n        history: this.history\n      }, props), React.createElement(IonRouter, {\n        registerHistoryListener: this.registerHistoryListener\n      }, children));\n    }\n  }]);\n\n  return IonReactHashRouter;\n}(React.Component);\n\nexport { IonReactHashRouter, IonReactMemoryRouter, IonReactRouter };","map":{"version":3,"mappings":"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","names":["IonRouteInner","React","Route","path","props","exact","render","computedMatch","PureComponent","ReactRouterViewStack","createViewItem","bind","findViewItemByRouteInfo","findLeavingViewItemByRouteInfo","getChildrenToRender","findViewItemByPathname","outletId","reactElement","routeInfo","page","viewItem","id","generateId","ionPageElement","mount","ionRoute","matchProps","from","component","match","matchPath","pathname","type","IonRoute","disableIonPageManagement","routeData","childProps","ionRouterOutlet","viewItems","getViewItemsForOutlet","Children","forEach","children","child","find","v","matchComponent","map","clonedChild","ViewLifeCycleManager","key","removeView","remove","cloneElement","undefined","findViewItemByPath","mustBeIonRoute","lastPathname","forceExact","viewStack","some","matchView","matchDefaultRoute","getAllViewItems","myMatch","url","isExact","params","ViewStacks","node","clonePageElement","leavingViewHtml","html","outerHTML","document","newEl","createElement","innerHTML","style","zIndex","ionBackButton","getElementsByTagName","firstChild","StackManager","registerIonPage","isInOutlet","transitionPage","handlePageTransition","routerOutletElement","setupRouterOutlet","prevProps","context","clearOutlet","commit","setTimeout","enteringViewItem","leavingViewItem","prevRouteLastPathname","routeAction","routeDirection","routeOptions","_a","unmount","enteringRoute","matchRoute","_b","addViewItem","classList","add","setAttribute","forceUpdate","foundView","routerOutlet","canStart","config","getConfig","swipeEnabled","get","mode","canGoBack","onStart","goBack","swipeHandler","onEnd","_shouldContinue","runCommit","enteringEl","leavingEl","deepWait","duration","direction","showGoBack","pushedByRoute","progressAnimation","animationBuilder","routeAnimation","newLeavingElement","appendChild","removeChild","only","components","StackContext","Provider","value","stackContextValue","ref","setRef","forwardedRef","current","RouteManagerContext","matchedNode","IonRouterInner","LocationHistory","locationHistory","clear","handleNavigateBack","unMountViewItem","location","search","handleChangeTab","handleResetTab","handleNativeBack","handleNavigate","registerHistoryListener","handleHistoryChange","handleSetCurrentTab","state","tab","getCurrentRouteInfoForTab","split","incomingRouteParams","Object","history","push","action","leavingLocationInfo","previous","leavingUrl","currentTab","currentRoute","prevInfo","findLastLocation","routerOptions","_c","isPushed","r","lastRoute","currentRouteInfo","currentPushedBy","setState","back","assign","replace","defaultHref","originalHref","originalRouteOptions","getFirstRouteInfoForTab","newRouteInfo","ri","update","routeMangerContextState","NavManager","ionRedirect","stackManager","onNativeBack","onNavigateBack","onNavigate","onSetCurrentTab","onChangeTab","onResetTab","IonRouter","withRouter","displayName","IonReactRouter","rest","__rest","createHistory","listen","locationValue","actionValue","historyListenHandler","cb","Router","Component","IonReactMemoryRouter","IonReactHashRouter"],"sources":["../src/ReactRouter/IonRouteInner.tsx","../src/ReactRouter/ReactRouterViewStack.tsx","../src/ReactRouter/clonePageElement.ts","../src/ReactRouter/StackManager.tsx","../src/ReactRouter/IonRouter.tsx","../src/ReactRouter/IonReactRouter.tsx","../src/ReactRouter/IonReactMemoryRouter.tsx","../src/ReactRouter/IonReactHashRouter.tsx"],"sourcesContent":["import { IonRouteProps } from '@ionic/react';\nimport React from 'react';\nimport { Route } from 'react-router';\n\nexport class IonRouteInner extends React.PureComponent<IonRouteProps> {\n  render() {\n    return (\n      <Route\n        path={this.props.path}\n        exact={this.props.exact}\n        render={this.props.render}\n        computedMatch={(this.props as any).computedMatch}\n      />\n    );\n  }\n}\n","import {\n  IonRoute,\n  RouteInfo,\n  ViewItem,\n  ViewLifeCycleManager,\n  ViewStacks,\n  generateId,\n} from '@ionic/react';\nimport React from 'react';\nimport { matchPath } from 'react-router';\n\nexport class ReactRouterViewStack extends ViewStacks {\n  constructor() {\n    super();\n    this.createViewItem = this.createViewItem.bind(this);\n    this.findViewItemByRouteInfo = this.findViewItemByRouteInfo.bind(this);\n    this.findLeavingViewItemByRouteInfo = this.findLeavingViewItemByRouteInfo.bind(this);\n    this.getChildrenToRender = this.getChildrenToRender.bind(this);\n    this.findViewItemByPathname = this.findViewItemByPathname.bind(this);\n  }\n\n  createViewItem(\n    outletId: string,\n    reactElement: React.ReactElement,\n    routeInfo: RouteInfo,\n    page?: HTMLElement\n  ) {\n    const viewItem: ViewItem = {\n      id: generateId('viewItem'),\n      outletId,\n      ionPageElement: page,\n      reactElement,\n      mount: true,\n      ionRoute: false,\n    };\n\n    const matchProps = {\n      exact: reactElement.props.exact,\n      path: reactElement.props.path || reactElement.props.from,\n      component: reactElement.props.component,\n    };\n\n    const match = matchPath(routeInfo.pathname, matchProps);\n\n    if (reactElement.type === IonRoute) {\n      viewItem.ionRoute = true;\n      viewItem.disableIonPageManagement = reactElement.props.disableIonPageManagement;\n    }\n\n    viewItem.routeData = {\n      match,\n      childProps: reactElement.props,\n    };\n\n    return viewItem;\n  }\n\n  getChildrenToRender(outletId: string, ionRouterOutlet: React.ReactElement, routeInfo: RouteInfo) {\n    const viewItems = this.getViewItemsForOutlet(outletId);\n\n    // Sync latest routes with viewItems\n    React.Children.forEach(ionRouterOutlet.props.children, (child: React.ReactElement) => {\n      const viewItem = viewItems.find((v) => {\n        return matchComponent(child, v.routeData.childProps.path || v.routeData.childProps.from);\n      });\n      if (viewItem) {\n        viewItem.reactElement = child;\n      }\n    });\n\n    const children = viewItems.map((viewItem) => {\n      let clonedChild;\n      if (viewItem.ionRoute && !viewItem.disableIonPageManagement) {\n        clonedChild = (\n          <ViewLifeCycleManager\n            key={`view-${viewItem.id}`}\n            mount={viewItem.mount}\n            removeView={() => this.remove(viewItem)}\n          >\n            {React.cloneElement(viewItem.reactElement, {\n              computedMatch: viewItem.routeData.match,\n            })}\n          </ViewLifeCycleManager>\n        );\n      } else {\n        const match = matchComponent(viewItem.reactElement, routeInfo.pathname);\n        clonedChild = (\n          <ViewLifeCycleManager\n            key={`view-${viewItem.id}`}\n            mount={viewItem.mount}\n            removeView={() => this.remove(viewItem)}\n          >\n            {React.cloneElement(viewItem.reactElement, {\n              computedMatch: viewItem.routeData.match,\n            })}\n          </ViewLifeCycleManager>\n        );\n\n        if (!match && viewItem.routeData.match) {\n          viewItem.routeData.match = undefined;\n          viewItem.mount = false;\n        }\n      }\n\n      return clonedChild;\n    });\n    return children;\n  }\n\n  findViewItemByRouteInfo(routeInfo: RouteInfo, outletId?: string) {\n    const { viewItem, match } = this.findViewItemByPath(routeInfo.pathname, outletId);\n    if (viewItem && match) {\n      viewItem.routeData.match = match;\n    }\n    return viewItem;\n  }\n\n  findLeavingViewItemByRouteInfo(routeInfo: RouteInfo, outletId?: string, mustBeIonRoute = true) {\n    const { viewItem } = this.findViewItemByPath(\n      routeInfo.lastPathname!,\n      outletId,\n      false,\n      mustBeIonRoute\n    );\n    return viewItem;\n  }\n\n  findViewItemByPathname(pathname: string, outletId?: string) {\n    const { viewItem } = this.findViewItemByPath(pathname, outletId);\n    return viewItem;\n  }\n\n  private findViewItemByPath(\n    pathname: string,\n    outletId?: string,\n    forceExact?: boolean,\n    mustBeIonRoute?: boolean\n  ) {\n    let viewItem: ViewItem | undefined;\n    let match: ReturnType<typeof matchPath> | undefined;\n    let viewStack: ViewItem[];\n\n    if (outletId) {\n      viewStack = this.getViewItemsForOutlet(outletId);\n      viewStack.some(matchView);\n      if (!viewItem) {\n        viewStack.some(matchDefaultRoute);\n      }\n    } else {\n      const viewItems = this.getAllViewItems();\n      viewItems.some(matchView);\n      if (!viewItem) {\n        viewItems.some(matchDefaultRoute);\n      }\n    }\n\n    return { viewItem, match };\n\n    function matchView(v: ViewItem) {\n      if (mustBeIonRoute && !v.ionRoute) {\n        return false;\n      }\n      const matchProps = {\n        exact: forceExact ? true : v.routeData.childProps.exact,\n        path: v.routeData.childProps.path || v.routeData.childProps.from,\n        component: v.routeData.childProps.component,\n      };\n      const myMatch = matchPath(pathname, matchProps);\n      if (myMatch) {\n        viewItem = v;\n        match = myMatch;\n        return true;\n      }\n      return false;\n    }\n\n    function matchDefaultRoute(v: ViewItem) {\n      // try to find a route that doesn't have a path or from prop, that will be our default route\n      if (!v.routeData.childProps.path && !v.routeData.childProps.from) {\n        match = {\n          path: pathname,\n          url: pathname,\n          isExact: true,\n          params: {},\n        };\n        viewItem = v;\n        return true;\n      }\n      return false;\n    }\n  }\n}\n\nfunction matchComponent(node: React.ReactElement, pathname: string, forceExact?: boolean) {\n  const matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component,\n  };\n  const match = matchPath(pathname, matchProps);\n\n  return match;\n}\n","export function clonePageElement(leavingViewHtml: string | HTMLElement) {\n  let html: string;\n  if (typeof leavingViewHtml === 'string') {\n    html = leavingViewHtml;\n  } else {\n    html = leavingViewHtml.outerHTML;\n  }\n  if (document) {\n    const newEl = document.createElement('div');\n    newEl.innerHTML = html;\n    newEl.style.zIndex = '';\n    // Remove an existing back button so the new element doesn't get two of them\n    const ionBackButton = newEl.getElementsByTagName('ion-back-button');\n    if (ionBackButton[0]) {\n      ionBackButton[0].remove();\n    }\n    return newEl.firstChild as HTMLElement;\n  }\n  return undefined;\n}\n","import {\n  RouteInfo,\n  RouteManagerContext,\n  StackContext,\n  StackContextState,\n  ViewItem,\n  generateId,\n  getConfig,\n} from '@ionic/react';\nimport React from 'react';\nimport { matchPath } from 'react-router-dom';\n\nimport { clonePageElement } from './clonePageElement';\n\ninterface StackManagerProps {\n  routeInfo: RouteInfo;\n}\n\ninterface StackManagerState {}\n\nexport class StackManager extends React.PureComponent<StackManagerProps, StackManagerState> {\n  id: string;\n  context!: React.ContextType<typeof RouteManagerContext>;\n  ionRouterOutlet?: React.ReactElement;\n  routerOutletElement: HTMLIonRouterOutletElement | undefined;\n\n  stackContextValue: StackContextState = {\n    registerIonPage: this.registerIonPage.bind(this),\n    isInOutlet: () => true,\n  };\n\n  constructor(props: StackManagerProps) {\n    super(props);\n    this.registerIonPage = this.registerIonPage.bind(this);\n    this.transitionPage = this.transitionPage.bind(this);\n    this.handlePageTransition = this.handlePageTransition.bind(this);\n    this.id = generateId('routerOutlet');\n  }\n\n  componentDidMount() {\n    if (this.routerOutletElement) {\n      this.setupRouterOutlet(this.routerOutletElement);\n      // console.log(`SM Mount - ${this.routerOutletElement.id} (${this.id})`);\n      this.handlePageTransition(this.props.routeInfo);\n    }\n  }\n\n  componentDidUpdate(prevProps: StackManagerProps) {\n    if (this.props.routeInfo.pathname !== prevProps.routeInfo.pathname) {\n      this.handlePageTransition(this.props.routeInfo);\n    }\n  }\n\n  componentWillUnmount() {\n    // console.log(`SM UNMount - ${(this.routerOutletElement?.id as any).id} (${this.id})`);\n    this.context.clearOutlet(this.id);\n  }\n\n  async handlePageTransition(routeInfo: RouteInfo) {\n    // If routerOutlet isn't quite ready, give it another try in a moment\n    if (!this.routerOutletElement || !this.routerOutletElement.commit) {\n      setTimeout(() => this.handlePageTransition(routeInfo), 10);\n    } else {\n      let enteringViewItem = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n      let leavingViewItem = this.context.findLeavingViewItemByRouteInfo(routeInfo, this.id);\n\n      if (!leavingViewItem && routeInfo.prevRouteLastPathname) {\n        leavingViewItem = this.context.findViewItemByPathname(\n          routeInfo.prevRouteLastPathname,\n          this.id\n        );\n      }\n\n      // Check if leavingViewItem should be unmounted\n      if (leavingViewItem) {\n        if (routeInfo.routeAction === 'replace') {\n          leavingViewItem.mount = false;\n        } else if (!(routeInfo.routeAction === 'push' && routeInfo.routeDirection === 'forward')) {\n          if (routeInfo.routeDirection !== 'none' && enteringViewItem !== leavingViewItem) {\n            leavingViewItem.mount = false;\n          }\n        } else if (routeInfo.routeOptions?.unmount) {\n          leavingViewItem.mount = false;\n        }\n      }\n\n      const enteringRoute = matchRoute(\n        this.ionRouterOutlet?.props.children,\n        routeInfo\n      ) as React.ReactElement;\n      if (enteringViewItem) {\n        enteringViewItem.reactElement = enteringRoute;\n      }\n      if (!enteringViewItem) {\n        if (enteringRoute) {\n          enteringViewItem = this.context.createViewItem(this.id, enteringRoute, routeInfo);\n          this.context.addViewItem(enteringViewItem);\n        }\n      }\n      if (enteringViewItem && enteringViewItem.ionPageElement) {\n        this.transitionPage(routeInfo, enteringViewItem, leavingViewItem);\n      } else if (leavingViewItem && !enteringRoute && !enteringViewItem) {\n        // If we have a leavingView but no entering view/route, we are probably leaving to\n        // another outlet, so hide this leavingView. We do it in a timeout to give time for a\n        // transition to finish.\n        // setTimeout(() => {\n        if (leavingViewItem.ionPageElement) {\n          leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n          leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n        }\n        // }, 250);\n      }\n\n      this.forceUpdate();\n    }\n  }\n\n  registerIonPage(page: HTMLElement, routeInfo: RouteInfo) {\n    const foundView = this.context.findViewItemByRouteInfo(routeInfo, this.id);\n    if (foundView) {\n      foundView.ionPageElement = page;\n      foundView.ionRoute = true;\n    }\n    this.handlePageTransition(routeInfo);\n  }\n\n  async setupRouterOutlet(routerOutlet: HTMLIonRouterOutletElement) {\n    const canStart = () => {\n      const config = getConfig();\n      const swipeEnabled = config && config.get('swipeBackEnabled', routerOutlet.mode === 'ios');\n      if (swipeEnabled) {\n        return this.context.canGoBack();\n      } else {\n        return false;\n      }\n    };\n\n    const onStart = () => {\n      this.context.goBack();\n    };\n    routerOutlet.swipeHandler = {\n      canStart,\n      onStart,\n      onEnd: (_shouldContinue) => true,\n    };\n  }\n\n  async transitionPage(\n    routeInfo: RouteInfo,\n    enteringViewItem: ViewItem,\n    leavingViewItem?: ViewItem\n  ) {\n    const routerOutlet = this.routerOutletElement!;\n\n    const direction =\n      routeInfo.routeDirection === 'none' || routeInfo.routeDirection === 'root'\n        ? undefined\n        : routeInfo.routeDirection;\n\n    if (enteringViewItem && enteringViewItem.ionPageElement && this.routerOutletElement) {\n      if (\n        leavingViewItem &&\n        leavingViewItem.ionPageElement &&\n        enteringViewItem === leavingViewItem\n      ) {\n        // If a page is transitioning to another version of itself\n        // we clone it so we can have an animation to show\n\n        const match = matchComponent(leavingViewItem.reactElement, routeInfo.pathname, true);\n        if (match) {\n          const newLeavingElement = clonePageElement(leavingViewItem.ionPageElement.outerHTML);\n          if (newLeavingElement) {\n            this.routerOutletElement.appendChild(newLeavingElement);\n            await runCommit(enteringViewItem.ionPageElement, newLeavingElement);\n            this.routerOutletElement.removeChild(newLeavingElement);\n          }\n        } else {\n          await runCommit(enteringViewItem.ionPageElement, undefined);\n        }\n      } else {\n        await runCommit(enteringViewItem.ionPageElement, leavingViewItem?.ionPageElement);\n        if (leavingViewItem && leavingViewItem.ionPageElement) {\n          leavingViewItem.ionPageElement.classList.add('ion-page-hidden');\n          leavingViewItem.ionPageElement.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n\n    async function runCommit(enteringEl: HTMLElement, leavingEl?: HTMLElement) {\n      enteringEl.classList.add('ion-page');\n      enteringEl.classList.add('ion-page-invisible');\n\n      await routerOutlet.commit(enteringEl, leavingEl, {\n        deepWait: true,\n        duration: direction === undefined ? 0 : undefined,\n        direction: direction as any,\n        showGoBack: !!routeInfo.pushedByRoute,\n        progressAnimation: false,\n        animationBuilder: routeInfo.routeAnimation,\n      });\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const ionRouterOutlet = React.Children.only(children) as React.ReactElement;\n    this.ionRouterOutlet = ionRouterOutlet;\n\n    const components = this.context.getChildrenToRender(\n      this.id,\n      this.ionRouterOutlet,\n      this.props.routeInfo,\n      () => {\n        this.forceUpdate();\n      }\n    );\n\n    return (\n      <StackContext.Provider value={this.stackContextValue}>\n        {React.cloneElement(\n          ionRouterOutlet as any,\n          {\n            ref: (node: HTMLIonRouterOutletElement) => {\n              if (ionRouterOutlet.props.setRef) {\n                ionRouterOutlet.props.setRef(node);\n              }\n              if (ionRouterOutlet.props.forwardedRef) {\n                ionRouterOutlet.props.forwardedRef.current = node;\n              }\n              this.routerOutletElement = node;\n              const { ref } = ionRouterOutlet as any;\n              if (typeof ref === 'function') {\n                ref(node);\n              }\n            },\n          },\n          components\n        )}\n      </StackContext.Provider>\n    );\n  }\n\n  static get contextType() {\n    return RouteManagerContext;\n  }\n}\n\nexport default StackManager;\n\nfunction matchRoute(node: React.ReactNode, routeInfo: RouteInfo) {\n  let matchedNode: React.ReactNode;\n  React.Children.forEach(node as React.ReactElement, (child: React.ReactElement) => {\n    const matchProps = {\n      exact: child.props.exact,\n      path: child.props.path || child.props.from,\n      component: child.props.component,\n    };\n    const match = matchPath(routeInfo.pathname, matchProps);\n    if (match) {\n      matchedNode = child;\n    }\n  });\n\n  if (matchedNode) {\n    return matchedNode;\n  }\n  // If we haven't found a node\n  // try to find one that doesn't have a path or from prop, that will be our not found route\n  React.Children.forEach(node as React.ReactElement, (child: React.ReactElement) => {\n    if (!(child.props.path || child.props.from)) {\n      matchedNode = child;\n    }\n  });\n\n  return matchedNode;\n}\n\nfunction matchComponent(node: React.ReactElement, pathname: string, forceExact?: boolean) {\n  const matchProps = {\n    exact: forceExact ? true : node.props.exact,\n    path: node.props.path || node.props.from,\n    component: node.props.component,\n  };\n  const match = matchPath(pathname, matchProps);\n\n  return match;\n}\n","import {\n  AnimationBuilder,\n  LocationHistory,\n  NavManager,\n  RouteAction,\n  RouteInfo,\n  RouteManagerContext,\n  RouteManagerContextState,\n  RouterDirection,\n  ViewItem,\n  generateId,\n  getConfig,\n} from '@ionic/react';\nimport { Action as HistoryAction, Location as HistoryLocation } from 'history';\nimport React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport { IonRouteInner } from './IonRouteInner';\nimport { ReactRouterViewStack } from './ReactRouterViewStack';\nimport StackManager from './StackManager';\n\nexport interface LocationState {\n  direction?: RouterDirection;\n  routerOptions?: { as?: string; unmount?: boolean };\n}\n\ninterface IonRouteProps extends RouteComponentProps<{}, {}, LocationState> {\n  registerHistoryListener: (\n    cb: (location: HistoryLocation<any>, action: HistoryAction) => void\n  ) => void;\n}\n\ninterface IonRouteState {\n  routeInfo: RouteInfo;\n}\n\nclass IonRouterInner extends React.PureComponent<IonRouteProps, IonRouteState> {\n  currentTab?: string;\n  exitViewFromOtherOutletHandlers: ((pathname: string) => ViewItem | undefined)[] = [];\n  incomingRouteParams?: Partial<RouteInfo>;\n  locationHistory = new LocationHistory();\n  viewStack = new ReactRouterViewStack();\n  routeMangerContextState: RouteManagerContextState = {\n    canGoBack: () => this.locationHistory.canGoBack(),\n    clearOutlet: this.viewStack.clear,\n    findViewItemByPathname: this.viewStack.findViewItemByPathname,\n    getChildrenToRender: this.viewStack.getChildrenToRender,\n    goBack: () => this.handleNavigateBack(),\n    createViewItem: this.viewStack.createViewItem,\n    findViewItemByRouteInfo: this.viewStack.findViewItemByRouteInfo,\n    findLeavingViewItemByRouteInfo: this.viewStack.findLeavingViewItemByRouteInfo,\n    addViewItem: this.viewStack.add,\n    unMountViewItem: this.viewStack.remove,\n  };\n\n  constructor(props: IonRouteProps) {\n    super(props);\n\n    const routeInfo = {\n      id: generateId('routeInfo'),\n      pathname: this.props.location.pathname,\n      search: this.props.location.search,\n    };\n\n    this.locationHistory.add(routeInfo);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleResetTab = this.handleResetTab.bind(this);\n    this.handleNativeBack = this.handleNativeBack.bind(this);\n    this.handleNavigate = this.handleNavigate.bind(this);\n    this.handleNavigateBack = this.handleNavigateBack.bind(this);\n    this.props.registerHistoryListener(this.handleHistoryChange.bind(this));\n    this.handleSetCurrentTab = this.handleSetCurrentTab.bind(this);\n\n    this.state = {\n      routeInfo,\n    };\n  }\n\n  handleChangeTab(tab: string, path?: string, routeOptions?: any) {\n    if (!path) { return; }\n\n    const routeInfo = this.locationHistory.getCurrentRouteInfoForTab(tab);\n    const [pathname, search] = path.split('?');\n    if (routeInfo) {\n      this.incomingRouteParams = { ...routeInfo, routeAction: 'push', routeDirection: 'none' };\n      if (routeInfo.pathname === pathname) {\n        this.incomingRouteParams.routeOptions = routeOptions;\n        this.props.history.push(routeInfo.pathname + (routeInfo.search || ''));\n      } else {\n        this.incomingRouteParams.pathname = pathname;\n        this.incomingRouteParams.search = search ? '?' + search : undefined;\n        this.incomingRouteParams.routeOptions = routeOptions;\n        this.props.history.push(pathname + (search ? '?' + search : ''));\n      }\n    } else {\n      this.handleNavigate(pathname, 'push', 'none', undefined, routeOptions, tab);\n    }\n  }\n\n  handleHistoryChange(location: HistoryLocation<LocationState>, action: HistoryAction) {\n    let leavingLocationInfo: RouteInfo;\n    if (this.incomingRouteParams) {\n      if (this.incomingRouteParams.routeAction === 'replace') {\n        leavingLocationInfo = this.locationHistory.previous();\n      } else {\n        leavingLocationInfo = this.locationHistory.current();\n      }\n    } else {\n      leavingLocationInfo = this.locationHistory.current();\n    }\n\n    const leavingUrl = leavingLocationInfo.pathname + leavingLocationInfo.search;\n    if (leavingUrl !== location.pathname) {\n      if (!this.incomingRouteParams) {\n        if (action === 'REPLACE') {\n          this.incomingRouteParams = {\n            routeAction: 'replace',\n            routeDirection: 'none',\n            tab: this.currentTab, // TODO this isn't legit if replacing to a page that is not in the tabs\n          };\n        }\n        if (action === 'POP') {\n          const currentRoute = this.locationHistory.current();\n          if (currentRoute && currentRoute.pushedByRoute) {\n            const prevInfo = this.locationHistory.findLastLocation(currentRoute);\n            this.incomingRouteParams = { ...prevInfo, routeAction: 'pop', routeDirection: 'back' };\n          } else {\n            this.incomingRouteParams = {\n              routeAction: 'pop',\n              routeDirection: 'none',\n              tab: this.currentTab,\n            };\n          }\n        }\n        if (!this.incomingRouteParams) {\n          this.incomingRouteParams = {\n            routeAction: 'push',\n            routeDirection: location.state?.direction || 'forward',\n            routeOptions: location.state?.routerOptions,\n            tab: this.currentTab,\n          };\n        }\n      }\n\n      let routeInfo: RouteInfo;\n\n      if (this.incomingRouteParams?.id) {\n        routeInfo = {\n          ...(this.incomingRouteParams as RouteInfo),\n          lastPathname: leavingLocationInfo.pathname,\n        };\n        this.locationHistory.add(routeInfo);\n      } else {\n        const isPushed =\n          this.incomingRouteParams.routeAction === 'push' &&\n          this.incomingRouteParams.routeDirection === 'forward';\n        routeInfo = {\n          id: generateId('routeInfo'),\n          ...this.incomingRouteParams,\n          lastPathname: leavingLocationInfo.pathname,\n          pathname: location.pathname,\n          search: location.search,\n          params: this.props.match.params,\n          prevRouteLastPathname: leavingLocationInfo.lastPathname,\n        };\n        if (isPushed) {\n          routeInfo.tab = leavingLocationInfo.tab;\n          routeInfo.pushedByRoute = leavingLocationInfo.pathname;\n        } else if (routeInfo.routeAction === 'pop') {\n          const r = this.locationHistory.findLastLocation(routeInfo);\n          routeInfo.pushedByRoute = r?.pushedByRoute;\n        } else if (routeInfo.routeAction === 'push' && routeInfo.tab !== leavingLocationInfo.tab) {\n          // If we are switching tabs grab the last route info for the tab and use its pushedByRoute\n          const lastRoute = this.locationHistory.getCurrentRouteInfoForTab(routeInfo.tab);\n          routeInfo.pushedByRoute = lastRoute?.pushedByRoute;\n        } else if (routeInfo.routeAction === 'replace') {\n          // Make sure to set the lastPathname, etc.. to the current route so the page transitions out\n          const currentRouteInfo = this.locationHistory.current();\n\n          /**\n           * If going from /home to /child, then replacing from\n           * /child to /home, we don't want the route info to\n           * say that /home was pushed by /home which is not correct.\n           */\n          const currentPushedBy = currentRouteInfo?.pushedByRoute;\n          const pushedByRoute = (currentPushedBy !== undefined && currentPushedBy !== routeInfo.pathname) ? currentPushedBy : routeInfo.pushedByRoute;\n\n          routeInfo.lastPathname = currentRouteInfo?.pathname || routeInfo.lastPathname;\n          routeInfo.prevRouteLastPathname = currentRouteInfo?.lastPathname;\n          routeInfo.pushedByRoute = pushedByRoute;\n          routeInfo.routeDirection = currentRouteInfo?.routeDirection || routeInfo.routeDirection;\n          routeInfo.routeAnimation = currentRouteInfo?.routeAnimation || routeInfo.routeAnimation;\n        }\n\n        this.locationHistory.add(routeInfo);\n      }\n\n      this.setState({\n        routeInfo,\n      });\n    }\n\n    this.incomingRouteParams = undefined;\n  }\n\n  /**\n   * history@4.x uses goBack(), history@5.x uses back()\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just\n   * assume back() is available.\n   */\n  handleNativeBack() {\n    const history = this.props.history as any;\n    const goBack = history.goBack || history.back;\n    goBack();\n  }\n\n  handleNavigate(\n    path: string,\n    routeAction: RouteAction,\n    routeDirection?: RouterDirection,\n    routeAnimation?: AnimationBuilder,\n    routeOptions?: any,\n    tab?: string\n  ) {\n    this.incomingRouteParams = Object.assign(this.incomingRouteParams || {}, {\n      routeAction,\n      routeDirection,\n      routeOptions,\n      routeAnimation,\n      tab,\n    });\n\n    if (routeAction === 'push') {\n      this.props.history.push(path);\n    } else {\n      this.props.history.replace(path);\n    }\n  }\n\n  handleNavigateBack(defaultHref: string | RouteInfo = '/', routeAnimation?: AnimationBuilder) {\n    const config = getConfig();\n    defaultHref = defaultHref ? defaultHref : config && config.get('backButtonDefaultHref' as any);\n    const routeInfo = this.locationHistory.current();\n    if (routeInfo && routeInfo.pushedByRoute) {\n      const prevInfo = this.locationHistory.findLastLocation(routeInfo);\n      if (prevInfo) {\n        this.incomingRouteParams = {\n          ...prevInfo,\n          routeAction: 'pop',\n          routeDirection: 'back',\n          routeAnimation: routeAnimation || routeInfo.routeAnimation,\n        };\n        if (\n          routeInfo.lastPathname === routeInfo.pushedByRoute ||\n          (\n            /**\n             * We need to exclude tab switches/tab\n             * context changes here because tabbed\n             * navigation is not linear, but router.back()\n             * will go back in a linear fashion.\n             */\n            prevInfo.pathname === routeInfo.pushedByRoute &&\n            routeInfo.tab === '' && prevInfo.tab === ''\n          )\n        ) {\n          /**\n           * history@4.x uses goBack(), history@5.x uses back()\n           * TODO: If support for React Router <=5 is dropped\n           * this logic is no longer needed. We can just\n           * assume back() is available.\n           */\n          const history = this.props.history as any;\n          const goBack = history.goBack || history.back;\n          goBack();\n        } else {\n          this.handleNavigate(prevInfo.pathname + (prevInfo.search || ''), 'pop', 'back');\n        }\n      } else {\n        this.handleNavigate(defaultHref as string, 'pop', 'back');\n      }\n    } else {\n      this.handleNavigate(defaultHref as string, 'pop', 'back');\n    }\n  }\n\n  handleResetTab(tab: string, originalHref: string, originalRouteOptions: any) {\n    const routeInfo = this.locationHistory.getFirstRouteInfoForTab(tab);\n    if (routeInfo) {\n      const newRouteInfo = { ...routeInfo };\n      newRouteInfo.pathname = originalHref;\n      newRouteInfo.routeOptions = originalRouteOptions;\n      this.incomingRouteParams = { ...newRouteInfo, routeAction: 'pop', routeDirection: 'back' };\n      this.props.history.push(newRouteInfo.pathname + (newRouteInfo.search || ''));\n    }\n  }\n\n  handleSetCurrentTab(tab: string) {\n    this.currentTab = tab;\n    const ri = { ...this.locationHistory.current() };\n    if (ri.tab !== tab) {\n      ri.tab = tab;\n      this.locationHistory.update(ri);\n    }\n  }\n\n  render() {\n    return (\n      <RouteManagerContext.Provider value={this.routeMangerContextState}>\n        <NavManager\n          ionRoute={IonRouteInner}\n          ionRedirect={{}}\n          stackManager={StackManager}\n          routeInfo={this.state.routeInfo!}\n          onNativeBack={this.handleNativeBack}\n          onNavigateBack={this.handleNavigateBack}\n          onNavigate={this.handleNavigate}\n          onSetCurrentTab={this.handleSetCurrentTab}\n          onChangeTab={this.handleChangeTab}\n          onResetTab={this.handleResetTab}\n          locationHistory={this.locationHistory}\n        >\n          {this.props.children}\n        </NavManager>\n      </RouteManagerContext.Provider>\n    );\n  }\n}\n\nexport const IonRouter = withRouter(IonRouterInner);\nIonRouter.displayName = 'IonRouter';\n","import {\n  Action as HistoryAction,\n  History,\n  Location as HistoryLocation,\n  createBrowserHistory as createHistory,\n} from 'history';\nimport React from 'react';\nimport { BrowserRouterProps, Router } from 'react-router-dom';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactRouterProps extends BrowserRouterProps {\n  history?: History;\n}\n\nexport class IonReactRouter extends React.Component<IonReactRouterProps> {\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n  history: History;\n\n  constructor(props: IonReactRouterProps) {\n    super(props);\n    const { history, ...rest } = props;\n    this.history = history || createHistory(rest);\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n /**\n  * history@4.x passes separate location and action\n  * params. history@5.x passes location and action\n  * together as a single object.\n  * TODO: If support for React Router <=5 is dropped\n  * this logic is no longer needed. We can just assume\n  * a single object with both location and action.\n  */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n   const locationValue = (location as any).location || location;\n   const actionValue = (location as any).action || action;\n   if (this.historyListenHandler) {\n     this.historyListenHandler(locationValue, actionValue);\n   }\n }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router history={this.history} {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n","import { Action as HistoryAction, Location as HistoryLocation, MemoryHistory } from 'history';\nimport React from 'react';\nimport { MemoryRouterProps, Router } from 'react-router';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactMemoryRouterProps extends MemoryRouterProps {\n  history: MemoryHistory;\n}\n\nexport class IonReactMemoryRouter extends React.Component<IonReactMemoryRouterProps> {\n  history: MemoryHistory;\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n\n  constructor(props: IonReactMemoryRouterProps) {\n    super(props);\n    this.history = props.history;\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n    const locationValue = (location as any).location || location;\n    const actionValue = (location as any).action || action;\n    if (this.historyListenHandler) {\n      this.historyListenHandler(locationValue, actionValue);\n    }\n  }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n","import {\n  Action as HistoryAction,\n  History,\n  Location as HistoryLocation,\n  createHashHistory as createHistory,\n} from 'history';\nimport React from 'react';\nimport { BrowserRouterProps, Router } from 'react-router-dom';\n\nimport { IonRouter } from './IonRouter';\n\ninterface IonReactHashRouterProps extends BrowserRouterProps {\n  history?: History;\n}\n\nexport class IonReactHashRouter extends React.Component<IonReactHashRouterProps> {\n  history: History;\n  historyListenHandler?: (location: HistoryLocation, action: HistoryAction) => void;\n\n  constructor(props: IonReactHashRouterProps) {\n    super(props);\n    const { history, ...rest } = props;\n    this.history = history || createHistory(rest);\n    this.history.listen(this.handleHistoryChange.bind(this));\n    this.registerHistoryListener = this.registerHistoryListener.bind(this);\n  }\n\n  /**\n   * history@4.x passes separate location and action\n   * params. history@5.x passes location and action\n   * together as a single object.\n   * TODO: If support for React Router <=5 is dropped\n   * this logic is no longer needed. We can just assume\n   * a single object with both location and action.\n   */\n  handleHistoryChange(location: HistoryLocation, action: HistoryAction) {\n    const locationValue = (location as any).location || location;\n    const actionValue = (location as any).action || action;\n    if (this.historyListenHandler) {\n      this.historyListenHandler(locationValue, actionValue);\n    }\n  }\n\n  registerHistoryListener(cb: (location: HistoryLocation, action: HistoryAction) => void) {\n    this.historyListenHandler = cb;\n  }\n\n  render() {\n    const { children, ...props } = this.props;\n    return (\n      <Router history={this.history} {...props}>\n        <IonRouter registerHistoryListener={this.registerHistoryListener}>{children}</IonRouter>\n      </Router>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}