{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../../../src/web.ts"],"names":["_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","length","done","value","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","StorageWeb","group","a","this","options","impl","getItem","applyPrefix","key","setItem","removeItem","keys","rawKeys","map","k","substring","prefix","migrated","existing","oldprefix","Object","filter","indexOf","oldkey","_a","get","push","set","window","localStorage","WebPlugin"],"mappings":"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","file":"static/js/40.c45577d4.chunk.js","sourcesContent":["import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  StoragePlugin,\n  ConfigureOptions,\n  GetOptions,\n  GetResult,\n  SetOptions,\n  RemoveOptions,\n  KeysResult,\n  MigrateResult,\n} from './definitions';\n\nexport class StorageWeb extends WebPlugin implements StoragePlugin {\n  private group = 'CapacitorStorage';\n\n  public async configure({ group }: ConfigureOptions): Promise<void> {\n    if (typeof group === 'string') {\n      this.group = group;\n    }\n  }\n\n  public async get(options: GetOptions): Promise<GetResult> {\n    const value = this.impl.getItem(this.applyPrefix(options.key));\n\n    return { value };\n  }\n\n  public async set(options: SetOptions): Promise<void> {\n    this.impl.setItem(this.applyPrefix(options.key), options.value);\n  }\n\n  public async remove(options: RemoveOptions): Promise<void> {\n    this.impl.removeItem(this.applyPrefix(options.key));\n  }\n\n  public async keys(): Promise<KeysResult> {\n    const keys = this.rawKeys().map(k => k.substring(this.prefix.length));\n\n    return { keys };\n  }\n\n  public async clear(): Promise<void> {\n    for (const key of this.rawKeys()) {\n      this.impl.removeItem(key);\n    }\n  }\n\n  public async migrate(): Promise<MigrateResult> {\n    const migrated: string[] = [];\n    const existing: string[] = [];\n    const oldprefix = '_cap_';\n    const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n\n    for (const oldkey of keys) {\n      const key = oldkey.substring(oldprefix.length);\n      const value = this.impl.getItem(oldkey) ?? '';\n      const { value: currentValue } = await this.get({ key });\n\n      if (typeof currentValue === 'string') {\n        existing.push(key);\n      } else {\n        await this.set({ key, value });\n        migrated.push(key);\n      }\n    }\n\n    return { migrated, existing };\n  }\n\n  public async removeOld(): Promise<void> {\n    const oldprefix = '_cap_';\n    const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n    for (const oldkey of keys) {\n      this.impl.removeItem(oldkey);\n    }\n  }\n\n  private get impl(): Storage {\n    return window.localStorage;\n  }\n\n  private get prefix(): string {\n    return this.group === 'NativeStorage' ? '' : `${this.group}.`;\n  }\n\n  private rawKeys(): string[] {\n    return Object.keys(this.impl).filter(k => k.indexOf(this.prefix) === 0);\n  }\n\n  private applyPrefix(key: string) {\n    return this.prefix + key;\n  }\n}\n"],"sourceRoot":""}